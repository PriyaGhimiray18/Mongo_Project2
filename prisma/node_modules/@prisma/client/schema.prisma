// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String
  email     String    @unique
  studentId String?   @unique
  password  String
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  bookings  Booking[]
}

model Hostel {
  id            String   @id @default(uuid())
  name          String   @unique
  type          String // "boys" or "girls"
  description   String
  accommodation String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  rooms         Room[]
}

model Room {
  id          Int    @id @default(autoincrement())
  room_number Int
  floor       Int
  capacity    Int
  status      String
  occupants   Int
  hostelId    String
  hostel      Hostel @relation(fields: [hostelId], references: [id])

  bookings Booking[] // back relation

  @@unique([room_number, hostelId])
}

model Booking {
  id           String        @id @default(uuid())
  studentName  String
  studentId    String
  department   String
  checkinDate  DateTime
  checkoutDate DateTime?
  numPeople    Int
  status       BookingStatus @default(PENDING)
  email        String
  phone        String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  roomId Int // changed from String to Int
  room   Room @relation(fields: [roomId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([roomId])
}

enum RoomStatus {
  AVAILABLE
  PARTIALLY_BOOKED
  FULLY_BOOKED
  MAINTENANCE
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
